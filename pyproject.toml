[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "edge-reasoning"
version = "0.1.0"
description = "Edge Reasoning Evaluation Framework"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Benjamin Kubwimana", email = "bkubwimana@nvidia.com"},
    {name = "Qijing Huang", email = "jennyhuang@nvidia.com"},
]
keywords = ["evaluation", "llm", "edge", "reasoning", "benchmarks"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Researchers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Core dependencies (minimal)
dependencies = [
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "psutil>=5.9.0",
    "pynvml>=12.0.0",
    "pandas>=2.3.2"
]

[project.optional-dependencies]
# Server evaluation dependencies
server = [
    "vllm==0.10.0",
    "transformers>=4.30.0",
    "datasets>=2.10.0",
    "matplotlib>=3.6.0",
    "pandas>=2.3.2",
    "torch>=2.0.0",
    "seaborn>=0.13.2",
    "absl-py>=2.3.1"
]

# Tegra evaluation dependencies
tegra = [
    "matplotlib>=3.10.5",
    "datasets>=3.6.0",
    "seaborn>=0.13.2"
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

# All dependencies
all = [
    "edge-reasoning[server,tegra,dev]"
]

[project.urls]
Homepage = "https://github.com/your-org/edge-reasoning"
Repository = "https://github.com/your-org/edge-reasoning"
Issues = "https://github.com/your-org/edge-reasoning/issues"

[project.scripts]
# CLI entry points (if needed)
edge-eval = "scripts.bootstrap:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["third_party.token2metrics.*"]
exclude = ["tests*", "benchmarks*", "data*", "outputs*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.conf"]

# Black code formatting
[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | third_party
  | benchmarks
)/
'''

# MyPy type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "third_party/",
    "benchmarks/",
    "data/",
    "outputs/",
]
